{"version":3,"sources":["components/NavBar.js","components/SearchField.js","components/WeatherItem.js","components/WeatherList.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","props","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","Button_default","href","padding","display","alignItems","width","margin","marginTop","input","marginLeft","flex","iconButton","divider","height","Paper_default","elevation","InputBase_default","placeholder","onChange","event","updateSearchingState","onKeyPress","ev","key","fetchWeather","searchInput","preventDefault","autoFocus","IconButton_default","aria-label","onClick","Search_default","theme","overflow","concat","spacing","unit","paper","maxWidth","specialText","saveButton","loading","error","List_default","ListItem_default","ListItemText_default","primary","savedCities","includes","data","name","id","handleSave","Delete_default","clear","Add_default","toCelsius","kelvin","Math","round","Fragment","ListItemAvatar_default","Avatar_default","charAt","sys","country","secondary","component","inline","main","temp","weather","temp_min","temp_max","description","clouds","all","wind","speed","humidity","pressure","coord","lon","lat","lastSearch","components_WeatherItem","weatherData","handleWeatherSave","clearLastResult","showLastSearch","savedWeathers","map","i","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveToLocalStorage","localStorage","setItem","JSON","stringify","state","loadFromLocalStorage","cities","weathers","parse","getItem","length","setState","e","console","log","updateSearching","target","value","location","fetch","then","response","ok","Error","json","debugging","catch","fetchUpdatedData","forEach","saveWeather","indexOf","removeWeather","filter","_","_this2","setTimeout","_this3","components_NavBar","SearchField","components_WeatherList","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ef45a12.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n};\n\nconst NavBar = (props) => {\n  const { classes } = props;\n\n  return(\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n            Weather Now\n          </Typography>\n          <Button color=\"inherit\" href=\"https://github.com/jonimettala/weather-app\">Fork on GitHub</Button>\n        </Toolbar>\n      </AppBar>\n  )\n}\n\nNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n    margin: 'auto',\n    marginTop: '20px',\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction CustomizedInputBase(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Weather\"\n        onChange={(event) => props.updateSearchingState(event)}\n        onKeyPress={(ev) => {\n          if (ev.key === 'Enter') {\n            props.fetchWeather(props.searchInput);\n            ev.preventDefault();\n          }\n        }}\n        autoFocus\n      />\n      <IconButton className={classes.iconButton} aria-label=\"Search\" onClick={() => props.fetchWeather(props.searchInput)} >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nCustomizedInputBase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputBase);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: `0 ${theme.spacing.unit * 3}px`,\n  },\n  paper: {\n    maxWidth: 800,\n    margin: `${theme.spacing.unit}px auto`,\n    padding: theme.spacing.unit * 2,\n  }\n});\n\nfunction WeatherItem(props) {\n  const { classes } = props;\n\n  // If weather can't be shown, a special text will be displayed\n  let specialText;\n  if (props.loading) {\n    specialText = 'Loading...';\n  } else if (props.error) {\n    specialText = 'Location can\\'t be found!';\n  };\n\n\n  if (props.loading || props.error) {\n    return (\n      <Paper className={classes.paper}>\n      <List className={classes.root}>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemText primary={specialText} />\n        </ListItem>\n      </List>\n    </Paper>\n    );\n  };\n\n  // Button that either saves the location or removes it from saved locations\n  let saveButton;\n  if (props.savedCities.includes(props.data.name)) {\n    saveButton = (\n      <IconButton aria-label=\"Delete\" className={classes.margin} onClick={() => {\n        if (typeof props.id !== \"number\") {\n          props.handleSave(props.data, -1);\n        } else {\n          props.handleSave(props.data, props.id);\n        }\n      }}>\n        <DeleteIcon />\n      </IconButton>\n    );\n  } else {\n    saveButton = (\n      <IconButton aria-label=\"Add\" className={classes.margin} onClick={() => {\n        props.handleSave(props.data, props.id);\n        props.clear();\n        }}>\n        <AddIcon />\n      </IconButton>\n    );\n  };\n\n  // Converts Kelvin to Celsius and rounds to one decimal\n  const toCelsius = (kelvin) => {\n    return Math.round((kelvin - 273.15) * 10) / 10;\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <List className={classes.root}>\n        <React.Fragment>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar>{props.data.name.charAt(0)}</Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={`${props.data.name}, ${props.data.sys.country}`}\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    {`${toCelsius(props.data.main.temp)} °C, ${props.data.weather[0].main}`}\n                  </Typography>\n                  {`min ${toCelsius(props.data.main.temp_min)} °C, max ${toCelsius(props.data.main.temp_max)} °C,\n                  ${props.data.weather[0].description}`}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    Clouds\n                  </Typography>\n                  {`${props.data.clouds.all}%`}\n                </React.Fragment>\n              }\n            />\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    Wind\n                  </Typography>\n                  {`${props.data.wind.speed} m/s`}\n                </React.Fragment>\n              }\n            />\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    Humidity\n                  </Typography>\n                  {`${props.data.main.humidity}%`}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    Pressure\n                  </Typography>\n                  {`${props.data.main.pressure} hpa`}\n                </React.Fragment>\n              }\n            />\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                    Location\n                  </Typography>\n                  {`lon: ${props.data.coord.lon}, lat: ${props.data.coord.lat}`}\n                </React.Fragment>\n              }\n            />\n            <ListItemText\n              secondary={\n                <React.Fragment>\n                  {saveButton}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        </React.Fragment>\n      </List>\n    </Paper>\n  );\n}\n\nWeatherItem.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(WeatherItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport WeatherItem from './WeatherItem';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: `0 ${theme.spacing.unit * 3}px`,\n  },\n  paper: {\n    maxWidth: 800,\n    margin: `${theme.spacing.unit}px auto`,\n    padding: theme.spacing.unit * 2,\n  },\n  divider: {\n    marginTop: '100px',\n  }\n});\n\nfunction WeatherList(props) {\n  const { classes } = props;\n\n  // Shows the last search result data\n  const showLastSearch = () => {\n    if (props.lastSearch !== null) {\n      return <WeatherItem \n        data={props.lastSearch}\n        handleSave={(weatherData, id) => props.handleWeatherSave(weatherData, id)}\n        savedCities={props.savedCities}\n        loading={props.loading}\n        error={props.error}\n        clear={() => props.clearLastResult()}\n      />;\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {showLastSearch()}\n      {props.savedWeathers.map((weather, i) => (\n        <WeatherItem\n          data={weather}\n          savedCities={props.savedCities}\n          handleSave={(weatherData, id) => props.handleWeatherSave(weatherData, id)}\n          key={i}\n          id={i}\n        />\n      ))}\n    </div>\n  );\n}\n\nWeatherList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(WeatherList);\n","import React, { Component } from 'react';\nimport NavBar from './components/NavBar';\nimport SearchField from './components/SearchField';\nimport WeatherList from './components/WeatherList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      searchInput: \"\",\n      lastSearch: null,\n      savedWeathers: [],\n      savedCities: [],\n      error: false,\n      loading: false,\n      debugging: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadFromLocalStorage();\n    setTimeout(() => this.fetchUpdatedData(), 200);\n  }\n\n  // Saves saved locations to browser's local storage\n  saveToLocalStorage = () => {\n    localStorage.setItem('cities', JSON.stringify(this.state.savedCities));\n    localStorage.setItem('weathers', JSON.stringify(this.state.savedWeathers));\n  }\n\n  // Loads saved locations from browser's local storage\n  loadFromLocalStorage = () => {\n    try {\n      let cities = [];\n      let weathers = JSON.parse(localStorage.getItem('weathers'));\n      cities = JSON.parse(localStorage.getItem('cities'));\n\n      if (cities.length !== 0) {\n        this.setState({\n          savedWeathers: weathers,\n          savedCities: cities\n        });\n      }\n    } catch (e) {\n      console.log('Error while trying to load local storage data');\n    }\n  }\n\n  // Removes the last search result from UI\n  clearLastResult = () => {\n    this.setState({\n      lastSearch: null,\n      error: null,\n      loading: null\n    });\n  }\n\n  // Callback function to update the user input\n  updateSearching = (event) => {\n    this.setState({ searchInput: event.target.value });\n  }\n\n  fetchWeather = (location) => {\n    // Let's try to fetch location only if location was entered\n    if (location !== \"\") {\n      this.setState({ loading: true, error: false });\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=7cc61ea99e1925b1ad21c6d78f349973`)\n      .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          throw Error(`Location not found.\\n\\nNo weather data available for location '${location}'.`);\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ lastSearch: data, loading: false, error: false },\n          () => {if (this.state.debugging) {\n            console.log(data);\n          }}\n        );\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({ lastSearch: \"\", loading: false, error: true });\n      })\n    }\n  }\n\n  // Fetches updated data\n  /*\n    It would be reasonable to combine fetching parts of this and fetchWeather().\n    At the moment there is too much repeation of code between these two functions.\n\n    This function also doesn't update the weathers to the same order as they were\n    before, which is bad UX and should be fixed in the future.\n  */\n  fetchUpdatedData = () => {\n    if (this.state.savedCities !== 0) {\n      let weathers = this.state.savedCities;\n      this.setState({\n        savedWeathers: [],\n        savedCities: []\n      })\n      weathers.forEach((location) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=7cc61ea99e1925b1ad21c6d78f349973`)\n        .then(response => {\n          if (response.ok) {\n            return response;\n          } else {\n            throw Error(`Location not found.\\n\\nNo weather data available for location '${location}'.`);\n          }\n        })\n        .then(response => response.json())\n        .then((data) => this.saveWeather(data))\n        .catch(error => {\n          console.error(error);\n        })\n      });\n    }\n  }\n\n  // Callback function for saving or removing the location\n  handleWeatherSave = (weatherData, id) => {\n    if (this.state.savedCities.includes(weatherData.name)) {\n      if (id === -1) {\n        id = this.state.savedCities.indexOf(weatherData.name);\n      }\n      this.removeWeather(id);\n    } else {\n      this.saveWeather(weatherData);\n    }\n  }\n\n  // Saves the location to saved locations\n  saveWeather = (weatherData) => {\n    this.setState({\n      savedWeathers: [weatherData].concat(this.state.savedWeathers),\n      savedCities: [weatherData.name].concat(this.state.savedCities)\n     },\n    () => {\n      this.saveToLocalStorage();\n      if (this.state.debugging) {\n        console.log(this.state.savedWeathers);\n      }\n    });\n  }\n\n  // Removes the location from saved locations\n  removeWeather = (id) => {\n    this.setState({\n      savedWeathers: this.state.savedWeathers.filter((_, i) => i !== id),\n      savedCities: this.state.savedCities.filter((_, i) => i !== id)\n    }, () => {\n      this.saveToLocalStorage();\n      if (this.state.debugging) {\n        console.log(`Removed weather with id ${id}`);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <SearchField\n          fetchWeather={(location) => this.fetchWeather(location)}\n          updateSearchingState={(event) => this.updateSearching(event)}\n          searchInput={this.state.searchInput}\n        />\n        <WeatherList\n          lastSearch={this.state.lastSearch}\n          savedWeathers={this.state.savedWeathers}\n          savedCities={this.state.savedCities}\n          handleWeatherSave={(weatherData, id) => this.handleWeatherSave(weatherData, id)}\n          error={this.state.error}\n          loading={this.state.loading}\n          clearLastResult={() => this.clearLastResult()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}